tool states
initializeStartTool
	"This method was automatically generated by the HotDraw ToolStateMachineEditor.
	To edit this method, evaluate the comment below"
	"| states transitions stateTable |
	states := ((Core.OrderedCollection new) add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'create Start Figure'; instVarAt: 3 put: '[:tool :event | 
tool drawing add: 
	(CormasNS.Kernel.StartFigure createAt: (tool cursorPointFor: event)).
tool drawing activateToolNumber: 1]'; instVarAt: 4 put: (Core.Point x: 260 y: 182); instVarAt: 5 put: true; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Start Tool'; instVarAt: 3 put: '[:tool :event | ]'; instVarAt: 4 put: (Core.Point x: 293 y: 30); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); yourself).
	stateTable := Dictionary new.
	states do: [:each | stateTable at: each name put: each].

	transitions := OrderedCollection new.
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Start Tool'); to: (stateTable at: 'create Start Figure'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #redButtonPress; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 315.072 y: 60.7761); add: (Core.Point x: 329.312 y: 181.141); yourself); yourself).
	ToolStateMachineEditor openWithStates: states connections: transitions"
	
	Tool states
		at: 'create Start Figure'
		put:
			(EndToolState
				name: 'create Start Figure'
				command:
					[:tool :event | 
					tool drawing add: (StartFigure createAt: (tool cursorPointFor: event)).
					tool drawing activateToolNumber: 1]).
	Tool states
		at: 'Start Tool'
		put:
			(ToolState
				name: 'Start Tool'
				command: [:tool :event | ]).
	(Tool stateFor: 'Start Tool')
		redButtonPress:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'create Start Figure');
				yourself)