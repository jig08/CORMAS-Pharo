tool states
initializeCreateEntityTool
	"This method was automatically generated by the HotDraw ToolStateMachineEditor.
	To edit this method, evaluate the comment below"
	"| states transitions stateTable |
	states := ((Core.OrderedCollection new) add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'CreateEntity Tool'; instVarAt: 3 put: '[:tool :event | ]'; instVarAt: 4 put: (Core.Point x: 190 y: 7); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Create entity'; instVarAt: 3 put: '[:tool :event | |figure|
	figure := (tool allFiguresAtEvent: event) detect:[:f| (f entityType inheritsFrom: CormasNS.Kernel.SpatialEntityElement)] ifNone:[nil].
	figure ifNotNil:[tool controller model  createEntitiesOn: figure]]

'; instVarAt: 4 put: (Core.Point x: 12 y: 169); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'CreateStartNode'; instVarAt: 3 put: '[:tool :event | 
| line figure point |
	figure := (tool allFiguresAtEvent: event) detect:[:f| (f entityType inheritsFrom: CormasNS.Kernel.SpatialEntityElement)] ifNone:[nil].
	figure isNil ifFalse:[tool controller model  createStartArcEntityOn: figure.
point := tool cursorPointFor: event.
line := (PolylineFigure) createAt: point.
tool valueAt: #PolylineFigure put: line.
tool drawing add: line]]'; instVarAt: 4 put: (Core.Point x: 371 y: 147); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'creation end'; instVarAt: 3 put: '[:tool :event | 
tool cursor: Cursor normal]'; instVarAt: 4 put: (Core.Point x: 166 y: 362); instVarAt: 5 put: true; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'MoveArc'; instVarAt: 3 put: '[:tool :event |
(tool valueAt: #PolylineFigure) ifNotNil:[
(tool valueAt: #PolylineFigure) stopPoint: (tool cursorPointFor: event)]]'; instVarAt: 4 put: (Core.Point x: 392 y: 230); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'createStopNode'; instVarAt: 3 put: '[:tool :event | |cellFigure polylineFigures |
	cellFigure := (tool allFiguresAtEvent: event) detect:[:f| (f entityType inheritsFrom: CormasNS.Kernel.SpatialEntityElement)] ifNone:[nil].
	cellFigure ifNotNil:[tool controller model  createStopArcEntityOn: cellFigure].
polylineFigures := tool drawing components select:[:c| c class = Refactory.HotDraw.PolylineFigure].
polylineFigures isEmpty ifFalse:[tool drawing remove: (polylineFigures last)]
]'; instVarAt: 4 put: (Core.Point x: 369 y: 319); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'isCreateInterfaceOpened'; instVarAt: 3 put: '[:tool :event |  tool controller isNil 
	ifTrue:[tool valueAt: #condition put: false]
	ifFalse:[tool controller model createInstancesController isNil
		ifTrue:[tool controller model openCreateInstances. 
			     tool valueAt: #condition put: false]
		ifFalse:[tool valueAt: #condition put: true]]]'; instVarAt: 4 put: (Core.Point x: 168 y: 60); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'isArcEntity'; instVarAt: 3 put: '[:tool :event |
CormasNS.Kernel.CreateInstances entityClass isNil ifFalse:[
tool valueAt: #condition put:
(CormasNS.Kernel.CreateInstances entityClass inheritsFrom: CormasNS.Kernel.ArcEntity).
tool cursor: Cursor crossHair]]'; instVarAt: 4 put: (Core.Point x: 197 y: 142); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'isCreating'; instVarAt: 3 put: '[:tool :event | tool valueAt: #condition put: (tool controller model createInstancesController isCreatingInstancesManuallyLocated)]'; instVarAt: 4 put: (Core.Point x: 435 y: 43); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); yourself).
	stateTable := Dictionary new.
	states do: [:each | stateTable at: each name put: each].

	transitions := OrderedCollection new.
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Create entity'); to: (stateTable at: 'creation end'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #immediate; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 49.633 y: 200.668); add: (Core.Point x: 45 y: 208); add: (Core.Point x: 46 y: 280); add: (Core.Point x: 205.978 y: 361.407); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'CreateStartNode'); to: (stateTable at: 'MoveArc'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #mouseMove; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 429.017 y: 178.671); add: (Core.Point x: 428.7 y: 229.456); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'MoveArc'); to: (stateTable at: 'createStopNode'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #redButtonPress; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 425.529 y: 261.61); add: (Core.Point x: 425.674 y: 318.375); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'createStopNode'); to: (stateTable at: 'creation end'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #redButtonRelease; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 367.92 y: 333.455); add: (Core.Point x: 217.986 y: 361.345); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'MoveArc'); to: (stateTable at: 'MoveArc'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #mouseMove; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 395.281 y: 237.406); add: (Core.Point x: 380 y: 221); add: (Core.Point x: 341 y: 229); add: (Core.Point x: 332 y: 241); add: (Core.Point x: 339 y: 258); add: (Core.Point x: 364 y: 266); add: (Core.Point x: 393.062 y: 252.225); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'CreateEntity Tool'); to: (stateTable at: 'isCreateInterfaceOpened'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #immediate; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 244.174 y: 38.8634); add: (Core.Point x: 245.444 y: 59.4135); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'isArcEntity'); to: (stateTable at: 'CreateStartNode'); type: (CormasNS.ToolConditionType basicNew instVarAt: 1 put: #redButtonPress; instVarAt: 2 put: true; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 268.698 y: 165.135); add: (Core.Point x: 286 y: 166); add: (Core.Point x: 369.783 y: 164.759); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'isArcEntity'); to: (stateTable at: 'Create entity'); type: (CormasNS.ToolConditionType basicNew instVarAt: 1 put: #redButtonPress; instVarAt: 2 put: false; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 199.354 y: 165.047); add: (Core.Point x: 75.5501 y: 169.283); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'isArcEntity'); to: (stateTable at: 'creation end'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #yellowButtonPress; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 239.709 y: 173.884); add: (Core.Point x: 242 y: 306); add: (Core.Point x: 213.496 y: 361.34); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'isArcEntity'); to: (stateTable at: 'creation end'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #keyPress; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 235.211 y: 173.583); add: (Core.Point x: 187 y: 283); add: (Core.Point x: 213.496 y: 361.34); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'isCreateInterfaceOpened'); to: (stateTable at: 'creation end'); type: (CormasNS.ToolConditionType basicNew instVarAt: 1 put: #mouseMove; instVarAt: 2 put: false; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 166.797 y: 76.9297); add: (Core.Point x: 119 y: 64); add: (Core.Point x: 15 y: 66); add: (Core.Point x: 16 y: 376); add: (Core.Point x: 164.995 y: 374.289); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'isCreateInterfaceOpened'); to: (stateTable at: 'isCreating'); type: (CormasNS.ToolConditionType basicNew instVarAt: 1 put: #mouseMove; instVarAt: 2 put: true; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 319.062 y: 71.2812); add: (Core.Point x: 344 y: 59); add: (Core.Point x: 433.51 y: 58.9885); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'isCreating'); to: (stateTable at: 'creation end'); type: (CormasNS.ToolConditionType basicNew instVarAt: 1 put: #immediate; instVarAt: 2 put: false; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 495.01 y: 69.6636); add: (Core.Point x: 530 y: 129); add: (Core.Point x: 530 y: 369); add: (Core.Point x: 328 y: 387); add: (Core.Point x: 314 y: 390); add: (Core.Point x: 233.887 y: 390.646); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'isCreating'); to: (stateTable at: 'isArcEntity'); type: (CormasNS.ToolConditionType basicNew instVarAt: 1 put: #immediate; instVarAt: 2 put: true; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 442.379 y: 69.7148); add: (Core.Point x: 262.489 y: 145.498); yourself); yourself).
	ToolStateMachineEditor openWithStates: states connections: transitions"
	
	Tool states
		at: 'CreateEntity Tool'
		put:
			(ToolState
				name: 'CreateEntity Tool'
				command: [:tool :event | ]).
	Tool states
		at: 'Create entity'
		put:
			(ToolState
				name: 'Create entity'
				command:
					[:tool :event | 
					| figure |
					figure := (tool allFiguresAtEvent: event)
						detect: [:f | f entityType inheritsFrom: SpatialEntityElement]
						ifNone: [nil].
					figure ifNotNil: [tool controller model createEntitiesOn: figure]]).
	Tool states
		at: 'CreateStartNode'
		put:
			(ToolState
				name: 'CreateStartNode'
				command:
					[:tool :event | 
					| line figure point |
					figure := (tool allFiguresAtEvent: event)
						detect: [:f | f entityType inheritsFrom: SpatialEntityElement]
						ifNone: [nil].
					figure isNil
						ifFalse:
							[tool controller model createStartArcEntityOn: figure.
							point := tool cursorPointFor: event.
							line := PolylineFigure createAt: point.
							tool valueAt: #PolylineFigure put: line.
							tool drawing add: line]]).
	Tool states
		at: 'creation end'
		put:
			(EndToolState
				name: 'creation end'
				command: [:tool :event | tool cursor: Cursor normal]).
	Tool states
		at: 'MoveArc'
		put:
			(ToolState
				name: 'MoveArc'
				command:
					[:tool :event | 
					(tool valueAt: #PolylineFigure)
						ifNotNil:
							[(tool valueAt: #PolylineFigure) stopPoint: (tool cursorPointFor: event)]]).
	Tool states
		at: 'createStopNode'
		put:
			(ToolState
				name: 'createStopNode'
				command:
					[:tool :event | 
					| cellFigure polylineFigures |
					cellFigure := (tool allFiguresAtEvent: event)
						detect: [:f | f entityType inheritsFrom: SpatialEntityElement]
						ifNone: [nil].
					cellFigure
						ifNotNil: [tool controller model createStopArcEntityOn: cellFigure].
					polylineFigures := tool drawing components
						select: [:c | c class = PolylineFigure].
					polylineFigures isEmpty
						ifFalse: [tool drawing remove: polylineFigures last]]).
	Tool states
		at: 'isCreateInterfaceOpened'
		put:
			(ToolState
				name: 'isCreateInterfaceOpened'
				command:
					[:tool :event | 
					tool controller isNil
						ifTrue: [tool valueAt: #condition put: false]
						ifFalse:
							[tool controller model createInstancesController isNil
								ifTrue:
									[tool controller model openCreateInstances.
									tool valueAt: #condition put: false]
								ifFalse: [tool valueAt: #condition put: true]]]).
	Tool states
		at: 'isArcEntity'
		put:
			(ToolState
				name: 'isArcEntity'
				command:
					[:tool :event | 
					CreateInstances entityClass isNil
						ifFalse:
							[tool
								valueAt: #condition
								put: (CreateInstances entityClass inheritsFrom: ArcEntity).
							tool cursor: Cursor crossHair]]).
	Tool states
		at: 'isCreating'
		put:
			(ToolState
				name: 'isCreating'
				command:
					[:tool :event | 
					tool
						valueAt: #condition
						put:
							tool controller model createInstancesController
								isCreatingInstancesManuallyLocated]).
	(Tool stateFor: 'CreateStartNode')
		mouseMove:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'MoveArc');
				yourself).
	(Tool stateFor: 'isCreateInterfaceOpened')
		mouseMove:
			((ConditionTransitionTable new)
				onCondition: true
					goto: (Tool stateFor: 'isCreating');
				onCondition: false
					goto: (Tool stateFor: 'creation end');
				yourself).
	(Tool stateFor: 'createStopNode')
		redButtonRelease:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'creation end');
				yourself).
	(Tool stateFor: 'Create entity')
		immediate:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'creation end');
				yourself).
	(Tool stateFor: 'isCreating')
		immediate:
			((ConditionTransitionTable new)
				onCondition: true
					goto: (Tool stateFor: 'isArcEntity');
				onCondition: false
					goto: (Tool stateFor: 'creation end');
				yourself).
	(Tool stateFor: 'CreateEntity Tool')
		immediate:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'isCreateInterfaceOpened');
				yourself).
	(Tool stateFor: 'isArcEntity')
		redButtonPress:
			((ConditionTransitionTable new)
				onCondition: false
					goto: (Tool stateFor: 'Create entity');
				onCondition: true
					goto: (Tool stateFor: 'CreateStartNode');
				yourself).
	(Tool stateFor: 'isArcEntity')
		yellowButtonPress:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'creation end');
				yourself).
	(Tool stateFor: 'isArcEntity')
		keyPress:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'creation end');
				yourself).
	(Tool stateFor: 'MoveArc')
		redButtonPress:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'createStopNode');
				yourself).
	(Tool stateFor: 'MoveArc')
		mouseMove:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'MoveArc');
				yourself)