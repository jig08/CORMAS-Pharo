tool states
initializeConnectionState
	"This method was automatically generated by the HotDraw ToolStateMachineEditor.
	To edit this method, evaluate the comment below"
	"| states transitions stateTable |
	states := ((OrderedCollection new) add: (ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Connection State'; instVarAt: 3 put: (Text string: '[:tool :event | 
| figure startPoint |
figure := (tool figureAtEvent: event) owner.
startPoint := tool cursorPointFor: event.
tool valueAt: #figure put: figure;
	valueAt: #startPoint put: startPoint;
	valueAt: #lastPoint put: startPoint.
(figure canConnectFromPoint: startPoint)
	ifFalse: [tool changeToState: tool initialState event: event]]' runs: (RunArray runs: #(342) values: #(nil))); instVarAt: 4 put: (Point x: 74 y: 35); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Connection Drag'; instVarAt: 3 put: (Text string: '[:tool :event | 
| currentPoint origin |
origin := tool valueAt: #startPoint.
tool drawing
	invalidateRectangle:
		(Rectangle vertex: origin vertex: (tool valueAt: #lastPoint))
	repairNow: true.
currentPoint := tool cursorPointFor: event.
(LineSegment from: currentPoint to: origin)
	displayStrokedOn: tool graphicsContext.
tool valueAt: #lastPoint put: currentPoint]' runs: (RunArray runs: #(367) values: #(nil))); instVarAt: 4 put: (Point x: 239 y: 142); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'End Connection'; instVarAt: 3 put: '[:tool :event | 
| endFigure startFigure origin lastPoint |
origin := tool valueAt: #startPoint.
lastPoint := tool valueAt: #lastPoint.
tool drawing
	invalidateRectangle: 
		(Rectangle vertex: origin vertex: (tool valueAt: #lastPoint))
	repairNow: true.
endFigure := (tool figureAtEvent: event) owner.
startFigure := tool valueAt: #figure.
(startFigure canConnectFromPoint: origin
				to: endFigure
				at: lastPoint) ifTrue: 
			[tool drawing add: (startFigure connectFromPoint: origin
				to: endFigure
				at: lastPoint)]]'; instVarAt: 4 put: (Point x: 68 y: 256); instVarAt: 5 put: true; instVarAt: 6 put: false; yourself); yourself).
	stateTable := Dictionary new.
	states do: [:each | stateTable at: each name put: each].

	transitions := OrderedCollection new.
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Connection State'); to: (stateTable at: 'Connection Drag'); type: (TransitionType basicNew instVarAt: 1 put: #mouseMove; yourself); points: ((OrderedCollection new) add: (Point x: 154.898 y: 64.6094); add: (Point x: 268.109 y: 141.395); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Connection Drag'); to: (stateTable at: 'Connection Drag'); type: (TransitionType basicNew instVarAt: 1 put: #mouseMove; yourself); points: ((OrderedCollection new) add: (Point x: 337.937 y: 147.828); add: (Point x: 397 y: 137); add: (Point x: 393 y: 187); add: (Point x: 333.938 y: 168.297); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Connection Drag'); to: (stateTable at: 'End Connection'); type: (TransitionType basicNew instVarAt: 1 put: #redButtonRelease; yourself); points: ((OrderedCollection new) add: (Point x: 263.016 y: 171.672); add: (Point x: 138.977 y: 256.333); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Connection State'); to: (stateTable at: 'End Connection'); type: (TransitionType basicNew instVarAt: 1 put: #redButtonRelease; yourself); points: ((OrderedCollection new) add: (Point x: 126.969 y: 66.7422); add: (Point x: 119.031 y: 255.261); yourself); yourself).
	ToolStateMachineEditor openWithStates: states connections: transitions"
	
	Tool states
		at: 'Connection State'
		put:
			(ToolState
				name: 'Connection State'
				command:
					[:tool :event | 
					| figure startPoint |
					figure := (tool figureAtEvent: event) owner.
					startPoint := tool cursorPointFor: event.
					tool
						valueAt: #figure put: figure;
						valueAt: #startPoint put: startPoint;
						valueAt: #lastPoint put: startPoint.
					(figure canConnectFromPoint: startPoint)
						ifFalse:
							[tool
								changeToState: tool initialState
								event: event]]).
	Tool states
		at: 'Connection Drag'
		put:
			(ToolState
				name: 'Connection Drag'
				command:
					[:tool :event | 
					| currentPoint origin |
					origin := tool valueAt: #startPoint.
					tool drawing
						invalidateRectangle:
							(Rectangle
								vertex: origin
								vertex: (tool valueAt: #lastPoint))
						repairNow: true.
					currentPoint := tool cursorPointFor: event.
					(LineSegment from: currentPoint to: origin)
						displayStrokedOn: tool graphicsContext.
					tool valueAt: #lastPoint put: currentPoint]).
	Tool states
		at: 'End Connection'
		put:
			(EndToolState
				name: 'End Connection'
				command:
					[:tool :event | 
					| endFigure startFigure origin lastPoint |
					origin := tool valueAt: #startPoint.
					lastPoint := tool valueAt: #lastPoint.
					tool drawing
						invalidateRectangle:
							(Rectangle
								vertex: origin
								vertex: (tool valueAt: #lastPoint))
						repairNow: true.
					endFigure := (tool figureAtEvent: event) owner.
					startFigure := tool valueAt: #figure.
					(startFigure canConnectFromPoint: origin to: endFigure at: lastPoint)
						ifTrue:
							[tool drawing
								add:
									(startFigure connectFromPoint: origin to: endFigure at: lastPoint)]]).
	(Tool stateFor: 'Connection Drag')
		mouseMove:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'Connection Drag');
				yourself).
	(Tool stateFor: 'Connection Drag')
		redButtonRelease:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'End Connection');
				yourself).
	(Tool stateFor: 'Connection State')
		mouseMove:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'Connection Drag');
				yourself).
	(Tool stateFor: 'Connection State')
		redButtonRelease:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'End Connection');
				yourself)