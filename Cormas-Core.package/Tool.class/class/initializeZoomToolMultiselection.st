tool states
initializeZoomToolMultiselection
	"This method was automatically generated by the HotDraw ToolStateMachineEditor.
	To edit this method, evaluate the comment below"
	"| states transitions stateTable |
	states := ((Core.OrderedCollection new) add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Zoom Tool Multi-select'; instVarAt: 3 put: '[:tool :event | 
| point |
point := tool cursorPointFor: event.
tool valueAt: #initialPoint put: point;
	valueAt: #lastPoint put: point]'; instVarAt: 4 put: (Core.Point x: 16 y: 45); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'multi-selection move'; instVarAt: 3 put: '[:tool :event | 
| gc newPoint origin |
origin := tool valueAt: #initialPoint.
tool drawing
	invalidateRectangle: (Rectangle vertex: origin vertex: (tool valueAt: #lastPoint))
	repairNow: true.
gc := tool drawing graphicsContext.
newPoint := tool cursorPointFor: event.
gc displayRectangularBorder: (Rectangle vertex: origin vertex: newPoint).
tool valueAt: #lastPoint put: newPoint]'; instVarAt: 4 put: (Core.Point x: 116 y: 144); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'multi-selection release'; instVarAt: 3 put: '[:tool :event | 
| origin lastPoint rect figures |
origin := (tool valueAt: #initialPoint).
lastPoint := (tool valueAt: #lastPoint) .
rect := Rectangle vertex: origin vertex: lastPoint.
rect := rect expandedBy: 3.
tool drawing invalidateRectangle: rect.
figures := tool drawing figuresIn: rect.
tool sensor shiftDown 
	ifTrue: [tool drawing toggleSelections: figures] 
	ifFalse: [tool drawing selections: figures]]'; instVarAt: 4 put: (Core.Point x: 84 y: 264); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Zoom Tool Select'; instVarAt: 3 put: '[:tool :event | ]'; instVarAt: 4 put: (Core.Point x: 85 y: 369); instVarAt: 5 put: false; instVarAt: 6 put: true; yourself); yourself).
	stateTable := Dictionary new.
	states do: [:each | stateTable at: each name put: each].

	transitions := OrderedCollection new.
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Zoom Tool Multi-select'); to: (stateTable at: 'multi-selection move'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #mouseMove; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 92.2657 y: 76.8412); add: (Core.Point x: 161.709 y: 143.222); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'multi-selection move'); to: (stateTable at: 'multi-selection move'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #mouseMove; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 245.241 y: 160.063); add: (Core.Point x: 323 y: 143); add: (Core.Point x: 323 y: 163); add: (Core.Point x: 239.655 y: 165.666); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'multi-selection move'); to: (stateTable at: 'multi-selection release'); type: (Refactory.HotDraw.FigureTransitionType basicNew instVarAt: 1 put: #redButtonRelease; instVarAt: 2 put: ((Core.Array new: 1) at: 1 put: Refactory.HotDraw.Figure; yourself); yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 199.198 y: 175.808); add: (Core.Point x: 172 y: 226); add: (Core.Point x: 156.813 y: 263.094); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'multi-selection release'); to: (stateTable at: 'Zoom Tool Select'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #immediate; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 147.825 y: 295.598); add: (Core.Point x: 150.531 y: 367.963); yourself); yourself).
	ToolStateMachineEditor openWithStates: states connections: transitions"
	
	Tool states
		at: 'Zoom Tool Multi-select'
		put:
			(ToolState
				name: 'Zoom Tool Multi-select'
				command:
					[:tool :event | 
					| point |
					point := tool cursorPointFor: event.
					tool
						valueAt: #initialPoint put: point;
						valueAt: #lastPoint put: point]).
	Tool states
		at: 'multi-selection move'
		put:
			(ToolState
				name: 'multi-selection move'
				command:
					[:tool :event | 
					| gc newPoint origin |
					origin := tool valueAt: #initialPoint.
					tool drawing
						invalidateRectangle:
							(Rectangle
								vertex: origin
								vertex: (tool valueAt: #lastPoint))
						repairNow: true.
					gc := tool drawing graphicsContext.
					newPoint := tool cursorPointFor: event.
					gc
						displayRectangularBorder: (Rectangle vertex: origin vertex: newPoint).
					tool valueAt: #lastPoint put: newPoint]).
	Tool states
		at: 'multi-selection release'
		put:
			(ToolState
				name: 'multi-selection release'
				command:
					[:tool :event | 
					| origin lastPoint rect figures |
					origin := tool valueAt: #initialPoint.
					lastPoint := tool valueAt: #lastPoint.
					rect := Rectangle vertex: origin vertex: lastPoint.
					rect := rect expandedBy: 3.
					tool drawing invalidateRectangle: rect.
					figures := tool drawing figuresIn: rect.
					tool sensor shiftDown
						ifTrue: [tool drawing toggleSelections: figures]
						ifFalse: [tool drawing selections: figures]]).
	(Tool stateFor: 'multi-selection release')
		immediate:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'Zoom Tool Select');
				yourself).
	(Tool stateFor: 'multi-selection move')
		mouseMove:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'multi-selection move');
				yourself).
	(Tool stateFor: 'multi-selection move')
		redButtonRelease:
			((FigureTransitionTable new)
				on: Figure
					goto: (Tool stateFor: 'multi-selection release');
				yourself).
	(Tool stateFor: 'Zoom Tool Multi-select')
		mouseMove:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'multi-selection move');
				yourself)