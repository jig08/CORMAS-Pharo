tool states
initializeZoomTool
	"This method was automatically generated by the HotDraw ToolStateMachineEditor.
	To edit this method, evaluate the comment below"
	"| states transitions stateTable |
	states := ((Core.OrderedCollection new) add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Zoom Tool'; instVarAt: 3 put: '[:tool :event | tool cursor: Cursor fingerPointer.
tool controller ifNotNil:[tool controller model entityForManipulation:nil] ]'; instVarAt: 4 put: (Core.Point x: 223 y: 23); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Zoom Tool Multi-select'; instVarAt: 3 put: '[:tool :event | ]'; instVarAt: 4 put: (Core.Point x: 330 y: 314); instVarAt: 5 put: false; instVarAt: 6 put: true; yourself); yourself).
	stateTable := Dictionary new.
	states do: [:each | stateTable at: each name put: each].

	transitions := OrderedCollection new.
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Zoom Tool'); to: (stateTable at: 'Zoom Tool Multi-select'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #redButtonPress; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 254.902 y: 54.5039); add: (Core.Point x: 405.515 y: 313.446); yourself); yourself).
	ToolStateMachineEditor openWithStates: states connections: transitions"
	
	Tool states
		at: 'Zoom Tool'
		put:
			(ToolState
				name: 'Zoom Tool'
				command:
					[:tool :event | 
					tool cursor: Cursor fingerPointer.
					tool controller
						ifNotNil: [tool controller model entityForManipulation: nil]]).
	(Tool stateFor: 'Zoom Tool')
		redButtonPress:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'Zoom Tool Multi-select');
				yourself)