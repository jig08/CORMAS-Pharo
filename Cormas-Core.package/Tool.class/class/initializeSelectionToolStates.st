tool states
initializeSelectionToolStates
	"This method was automatically generated by the HotDraw ToolStateMachineEditor.
	To edit this method, evaluate the comment below"
	"| states transitions stateTable |
	states := ((Core.OrderedCollection new) add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Selection Tool'; instVarAt: 3 put: (Text string: '[:tool :event | tool cursor: Cursor normal]' runs: (Core.RunArray runs: #(43) values: #(nil))); instVarAt: 4 put: (Core.Point x: 198 y: 21); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Selection Tool Select'; instVarAt: 3 put: '[:tool :event | ]'; instVarAt: 4 put: (Core.Point x: 12 y: 111); instVarAt: 5 put: false; instVarAt: 6 put: true; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Menu'; instVarAt: 3 put: (Text string: '[:tool :event | 
tool controller processMenuAt: event globalPoint
	local: (tool cursorPointFor: event)
	for: (tool figureAtEvent: event)]' runs: (Core.RunArray runs: #(137) values: #(nil))); instVarAt: 4 put: (Core.Point x: 31 y: 193); instVarAt: 5 put: true; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Selection Tool Multi-select'; instVarAt: 3 put: '[:tool :event | ]'; instVarAt: 4 put: (Core.Point x: 226 y: 334); instVarAt: 5 put: false; instVarAt: 6 put: true; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Handle Processing'; instVarAt: 3 put: (Text string: '[:tool :event | tool changeToState: (tool figureAtEvent: event) toolState event: event]' runs: (Core.RunArray runs: #(87) values: #(nil))); instVarAt: 4 put: (Core.Point x: 411 y: 253); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Selection Tool Remove Figures'; instVarAt: 3 put: (Text string: '[:tool :event | tool drawing removeAll: (tool drawing selections copy)]' runs: (Core.RunArray runs: #(71) values: #(nil))); instVarAt: 4 put: (Core.Point x: 345 y: 111); instVarAt: 5 put: true; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'openFigure'; instVarAt: 3 put: '[:tool :event | (tool figureAtEvent: event) model inspectCode]'; instVarAt: 4 put: (Core.Point x: 64 y: 356); instVarAt: 5 put: true; instVarAt: 6 put: false; yourself); yourself).
	stateTable := Dictionary new.
	states do: [:each | stateTable at: each name put: each].

	transitions := OrderedCollection new.
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Selection Tool'); to: (stateTable at: 'Selection Tool Select'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #redButtonPress; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 219.88 y: 51.098); add: (Core.Point x: 131.308 y: 116.484); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Selection Tool'); to: (stateTable at: 'Menu'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #yellowButtonPress; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 234.519 y: 52.6429); add: (Core.Point x: 73.5176 y: 207.777); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Selection Tool'); to: (stateTable at: 'Selection Tool Multi-select'); type: (Refactory.HotDraw.FigureTransitionType basicNew instVarAt: 1 put: #redButtonPress; instVarAt: 2 put: ((Core.Array new: 1) at: 1 put: Refactory.HotDraw.Drawing; yourself); yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 246.113 y: 52.5497); add: (Core.Point x: 303.887 y: 333.449); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Selection Tool'); to: (stateTable at: 'Handle Processing'); type: (Refactory.HotDraw.FigureTransitionType basicNew instVarAt: 1 put: #redButtonPress; instVarAt: 2 put: ((Core.Array new: 1) at: 1 put: Refactory.HotDraw.Handle; yourself); yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 259.766 y: 51.7891); add: (Core.Point x: 454.623 y: 252.412); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Selection Tool'); to: (stateTable at: 'Selection Tool Remove Figures'); type: (CharacterTransitionType new event: #keyPress; characters: (String fromIntegerArray: #[8 127])); points: ((Core.OrderedCollection new) add: (Core.Point x: 291.663 y: 38.7266); add: (Core.Point x: 364 y: 39); add: (Core.Point x: 410.234 y: 111.469); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Selection Tool'); to: (stateTable at: 'openFigure'); type: (Refactory.HotDraw.FigureTransitionType basicNew instVarAt: 1 put: #doubleClick; instVarAt: 2 put: ((Core.Array new: 2) at: 1 put: CormasNS.Kernel.ActivityFigure; at: 2 put: CormasNS.Kernel.DiamondFigure; yourself); yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 232.52 y: 52.7034); add: (Core.Point x: 128 y: 248); add: (Core.Point x: 120.427 y: 356.103); yourself); yourself).
	ToolStateMachineEditor openWithStates: states connections: transitions"
	
	Tool states
		at: 'Selection Tool'
		put:
			(ToolState
				name: 'Selection Tool'
				command: [:tool :event | tool cursor: Cursor normal]).
	Tool states
		at: 'Menu'
		put:
			(EndToolState
				name: 'Menu'
				command:
					[:tool :event | 
					tool controller
						processMenuAt: event globalPoint
						local: (tool cursorPointFor: event)
						for: (tool figureAtEvent: event)]).
	Tool states
		at: 'Handle Processing'
		put:
			(ToolState
				name: 'Handle Processing'
				command:
					[:tool :event | 
					tool
						changeToState: (tool figureAtEvent: event) toolState
						event: event]).
	Tool states
		at: 'Selection Tool Remove Figures'
		put:
			(EndToolState
				name: 'Selection Tool Remove Figures'
				command:
					[:tool :event | tool drawing removeAll: tool drawing selections copy]).
	Tool states
		at: 'openFigure'
		put:
			(EndToolState
				name: 'openFigure'
				command: [:tool :event | (tool figureAtEvent: event) model inspectCode]).
	(Tool stateFor: 'Selection Tool')
		keyPress:
			((CharacterTransitionTable new)
				forCharacters: (String fromIntegerArray: #[8 127])
					goto: (Tool stateFor: 'Selection Tool Remove Figures');
				yourself).
	(Tool stateFor: 'Selection Tool')
		yellowButtonPress:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'Menu');
				yourself).
	(Tool stateFor: 'Selection Tool')
		doubleClick:
			((FigureTransitionTable new)
				on: ActivityFigure
					goto: (Tool stateFor: 'openFigure');
				on: DiamondFigure
					goto: (Tool stateFor: 'openFigure');
				yourself).
	(Tool stateFor: 'Selection Tool')
		redButtonPress:
			((FigureTransitionTable new)
				on: Handle
					goto: (Tool stateFor: 'Handle Processing');
				on: Drawing
					goto: (Tool stateFor: 'Selection Tool Multi-select');
				goto: (Tool stateFor: 'Selection Tool Select');
				yourself)