tool states
initializeMaskStates
	"This method was automatically generated by the HotDraw ToolStateMachineEditor.
	To edit this method, evaluate the comment below"
	"| states transitions stateTable |
	states := ((Core.OrderedCollection new) add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Press Mask (HotPaint)'; instVarAt: 3 put: '[:tool :event | 
tool valueAt: #figure put: (tool figureAtEvent: event).
]'; instVarAt: 4 put: (Core.Point x: 111 y: 209); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Paint Mask (HotPaint)'; instVarAt: 3 put: (Text string: '[:tool :event | 
| masks mask figure |
figure := tool valueAt: #figure.
masks := tool valueAt: #masks.
mask := masks at: ((figure width min: masks size) max: 1).
figure paintAt: (tool cursorPointFor: event)
	brushMask: mask]' runs: (Core.RunArray runs: #(224) values: #(nil))); instVarAt: 4 put: (Core.Point x: 115 y: 282); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'End State'; instVarAt: 3 put: '[:tool :event | ]'; instVarAt: 4 put: (Core.Point x: 92 y: 359); instVarAt: 5 put: false; instVarAt: 6 put: true; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Hot Paint Image Tool'; instVarAt: 3 put: (Text string: '[:tool :event | 
tool valueAt: #masks put: HotPaintEditor images]' runs: (Core.RunArray runs: #(65) values: #(nil))); instVarAt: 4 put: (Core.Point x: 45 y: 64); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Hot Paint Mask Tool'; instVarAt: 3 put: (Text string: '[:tool :event | 
tool valueAt: #masks put: HotPaintEditor paintStyles]' runs: (Core.RunArray runs: #(70) values: #(nil))); instVarAt: 4 put: (Core.Point x: 294 y: 74); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (Refactory.HotDraw.ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Menu'; instVarAt: 3 put: '[:tool :event | ]'; instVarAt: 4 put: (Core.Point x: 452 y: 196); instVarAt: 5 put: false; instVarAt: 6 put: true; yourself); yourself).
	stateTable := Dictionary new.
	states do: [:each | stateTable at: each name put: each].

	transitions := OrderedCollection new.
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Paint Mask (HotPaint)'); to: (stateTable at: 'Paint Mask (HotPaint)'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #mouseMove; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 245.679 y: 292.614); add: (Core.Point x: 309 y: 279); add: (Core.Point x: 309 y: 299); add: (Core.Point x: 241.593 y: 301.313); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Paint Mask (HotPaint)'); to: (stateTable at: 'End State'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #redButtonRelease; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 162.384 y: 308.896); add: (Core.Point x: 127.508 y: 357.776); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Hot Paint Image Tool'); to: (stateTable at: 'Press Mask (HotPaint)'); type: (Refactory.HotDraw.FigureTransitionType basicNew instVarAt: 1 put: #redButtonPress; instVarAt: 2 put: ((Core.Array new: 1) at: 1 put: Refactory.HotDraw.CanvasFigure; yourself); yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 81.2093 y: 90.0367); add: (Core.Point x: 120.891 y: 212.901); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Hot Paint Mask Tool'); to: (stateTable at: 'Press Mask (HotPaint)'); type: (Refactory.HotDraw.FigureTransitionType basicNew instVarAt: 1 put: #redButtonPress; instVarAt: 2 put: ((Core.Array new: 1) at: 1 put: Refactory.HotDraw.CanvasFigure; yourself); yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 348.358 y: 101.264); add: (Core.Point x: 219.635 y: 210.125); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Hot Paint Mask Tool'); to: (stateTable at: 'Menu'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #yellowButtonPress; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 369.625 y: 100.812); add: (Core.Point x: 463.263 y: 195.256); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Hot Paint Image Tool'); to: (stateTable at: 'Menu'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #yellowButtonPress; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 170.928 y: 81.2185); add: (Core.Point x: 344 y: 26); add: (Core.Point x: 478 y: 39); add: (Core.Point x: 475.012 y: 195.387); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Press Mask (HotPaint)'); to: (stateTable at: 'Paint Mask (HotPaint)'); type: (Refactory.HotDraw.TransitionType basicNew instVarAt: 1 put: #immediate; yourself); points: ((Core.OrderedCollection new) add: (Core.Point x: 182.125 y: 236.781); add: (Core.Point x: 184.306 y: 280.894); yourself); yourself).
	ToolStateMachineEditor openWithStates: states connections: transitions"
	
	Tool states
		at: 'Press Mask (HotPaint)'
		put:
			(ToolState
				name: 'Press Mask (HotPaint)'
				command:
					[:tool :event | 
					tool
						valueAt: #figure
						put: (tool figureAtEvent: event)]).
	Tool states
		at: 'Paint Mask (HotPaint)'
		put:
			(ToolState
				name: 'Paint Mask (HotPaint)'
				command:
					[:tool :event | 
					| masks mask figure |
					figure := tool valueAt: #figure.
					masks := tool valueAt: #masks.
					mask := masks at: ((figure width min: masks size) max: 1).
					figure
						paintAt: (tool cursorPointFor: event)
						brushMask: mask]).
	Tool states
		at: 'Hot Paint Image Tool'
		put:
			(ToolState
				name: 'Hot Paint Image Tool'
				command:
					[:tool :event | 
					tool
						valueAt: #masks
						put: HotPaintEditor images]).
	Tool states
		at: 'Hot Paint Mask Tool'
		put:
			(ToolState
				name: 'Hot Paint Mask Tool'
				command:
					[:tool :event | 
					tool
						valueAt: #masks
						put: HotPaintEditor paintStyles]).
	(Tool stateFor: 'Paint Mask (HotPaint)')
		mouseMove:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'Paint Mask (HotPaint)');
				yourself).
	(Tool stateFor: 'Paint Mask (HotPaint)')
		redButtonRelease:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'End State');
				yourself).
	(Tool stateFor: 'Press Mask (HotPaint)')
		immediate:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'Paint Mask (HotPaint)');
				yourself).
	(Tool stateFor: 'Hot Paint Mask Tool')
		yellowButtonPress:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'Menu');
				yourself).
	(Tool stateFor: 'Hot Paint Mask Tool')
		redButtonPress:
			((FigureTransitionTable new)
				on: CanvasFigure
					goto: (Tool stateFor: 'Press Mask (HotPaint)');
				yourself).
	(Tool stateFor: 'Hot Paint Image Tool')
		yellowButtonPress:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'Menu');
				yourself).
	(Tool stateFor: 'Hot Paint Image Tool')
		redButtonPress:
			((FigureTransitionTable new)
				on: CanvasFigure
					goto: (Tool stateFor: 'Press Mask (HotPaint)');
				yourself)