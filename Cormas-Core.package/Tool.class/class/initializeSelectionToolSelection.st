tool states
initializeSelectionToolSelection
	"This method was automatically generated by the HotDraw ToolStateMachineEditor.
	To edit this method, evaluate the comment below"
	"| states transitions stateTable |
	states := ((OrderedCollection new) add: (ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Selection Tool Select'; instVarAt: 3 put: (Text string: '[:tool :event | 
| drawing lastPoint figure |
drawing := tool drawing.
lastPoint := tool cursorPointFor: event.
tool valueAt: #lastPoint put: lastPoint.
figure := drawing figureAt: lastPoint.
tool sensor shiftDown
	ifTrue: [drawing toggleSelection: figure]
	ifFalse: [(drawing isSelected: figure) ifFalse: [drawing selection: figure]]]' runs: (RunArray runs: #(335) values: #(nil))); instVarAt: 4 put: (Point x: 46 y: 51); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'Selection Tool Move Figure'; instVarAt: 3 put: (Text string: '[:tool :event | 
| delta newPoint |
newPoint := tool cursorPointFor: event.
delta := newPoint - (tool valueAt: #lastPoint).
tool valueAt: #lastPoint put: newPoint.
tool drawing selections do: [:each | each translateBy: delta]]' runs: (RunArray runs: #(226) values: #(nil))); instVarAt: 4 put: (Point x: 133 y: 140); instVarAt: 5 put: false; instVarAt: 6 put: false; yourself); add: (ToolStateModel basicNew instVarAt: 1 put: nil; instVarAt: 2 put: 'End State'; instVarAt: 3 put: '[:tool :event | ]'; instVarAt: 4 put: (Point x: 55 y: 253); instVarAt: 5 put: true; instVarAt: 6 put: false; yourself); yourself).
	stateTable := Dictionary new.
	states do: [:each | stateTable at: each name put: each].

	transitions := OrderedCollection new.
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Selection Tool Select'); to: (stateTable at: 'Selection Tool Move Figure'); type: (TransitionType basicNew instVarAt: 1 put: #mouseMove; yourself); points: ((OrderedCollection new) add: (Point x: 137 y: 81); add: (Point x: 222 y: 140); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Selection Tool Move Figure'); to: (stateTable at: 'Selection Tool Move Figure'); type: (TransitionType basicNew instVarAt: 1 put: #mouseMove; yourself); points: ((OrderedCollection new) add: (Point x: 252 y: 141); add: (Point x: 358 y: 131); add: (Point x: 358 y: 151); add: (Point x: 299 y: 154); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Selection Tool Move Figure'); to: (stateTable at: 'End State'); type: (TransitionType basicNew instVarAt: 1 put: #redButtonRelease; yourself); points: ((OrderedCollection new) add: (Point x: 209 y: 171); add: (Point x: 104 y: 253); yourself); yourself).
	transitions add: (ToolStateTransitionModel new from: (stateTable at: 'Selection Tool Select'); to: (stateTable at: 'End State'); type: (TransitionType basicNew instVarAt: 1 put: #redButtonRelease; yourself); points: ((OrderedCollection new) add: (Point x: 117 y: 82); add: (Point x: 90 y: 253); yourself); yourself).
	ToolStateMachineEditor openWithStates: states connections: transitions"
	
	Tool states
		at: 'Selection Tool Select'
		put:
			(ToolState
				name: 'Selection Tool Select'
				command:
					[:tool :event | 
					| drawing lastPoint figure |
					drawing := tool drawing.
					lastPoint := tool cursorPointFor: event.
					tool valueAt: #lastPoint put: lastPoint.
					figure := drawing figureAt: lastPoint.
					tool sensor shiftDown
						ifTrue: [drawing toggleSelection: figure]
						ifFalse:
							[(drawing isSelected: figure) ifFalse: [drawing selection: figure]]]).
	Tool states
		at: 'Selection Tool Move Figure'
		put:
			(ToolState
				name: 'Selection Tool Move Figure'
				command:
					[:tool :event | 
					| delta newPoint |
					newPoint := tool cursorPointFor: event.
					delta := newPoint - (tool valueAt: #lastPoint).
					tool valueAt: #lastPoint put: newPoint.
					tool drawing selections do: [:each | each translateBy: delta]]).
	Tool states
		at: 'End State'
		put:
			(EndToolState
				name: 'End State'
				command: [:tool :event | ]).
	(Tool stateFor: 'Selection Tool Select')
		redButtonRelease:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'End State');
				yourself).
	(Tool stateFor: 'Selection Tool Select')
		mouseMove:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'Selection Tool Move Figure');
				yourself).
	(Tool stateFor: 'Selection Tool Move Figure')
		redButtonRelease:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'End State');
				yourself).
	(Tool stateFor: 'Selection Tool Move Figure')
		mouseMove:
			((SimpleTransitionTable new)
				goto: (Tool stateFor: 'Selection Tool Move Figure');
				yourself)